{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flavi\\\\Desktop\\\\MangaKu\\\\mangaku\\\\src\\\\components\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\n// LoginForm.js\nimport React, { useState, useEffect } from 'react';\nimport './LoginForm.css'; // Importando o arquivo de estilo\nimport Listagem from '../pages/Listagem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginForm = ({\n  onClose\n}) => {\n  _s();\n  const [isRegister, setIsRegister] = useState(false);\n  const [formPosition, setFormPosition] = useState(0);\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    agreeTerms: false\n  });\n  const [newUserData, setNewUserData] = useState(null); // Adicionando estado para os novos dados do usuário\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  const handleClickOutside = event => {\n    const formContainer = document.getElementById('login-form');\n    if (formContainer && !formContainer.contains(event.target)) {\n      onClose();\n    }\n  };\n  const switchToRegister = () => {\n    setIsRegister(!isRegister);\n    setFormPosition(isRegister ? 0 : 100);\n  };\n  const login = event => {\n    event.preventDefault();\n    // Código da função login\n    // Aqui você pode adicionar a lógica de login se necessário\n    onClose(); // Fecha o formulário após o login\n  };\n  const register = event => {\n    event.preventDefault();\n    if (formData.password === formData.confirmPassword && formData.agreeTerms) {\n      const users = JSON.parse(localStorage.getItem('users')) || [];\n      const newUser = {\n        firstName: formData.firstName,\n        lastName: formData.lastName,\n        email: formData.email,\n        password: formData.password\n      };\n      users.push(newUser);\n      localStorage.setItem('users', JSON.stringify(users));\n\n      // Atualizando o estado com os novos dados do usuário\n      setNewUserData(newUser);\n      onClose(); // Fecha o formulário após o registro\n    } else {\n      alert('Senhas não correspondem ou termos não aceitos.');\n    }\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = event.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"login-form\",\n    className: `form-container ${isRegister ? 'visible' : ''}`,\n    style: {\n      left: `${formPosition}%`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: switchToRegister,\n          className: `toggle-btn ${isRegister ? '' : 'active'}`,\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: switchToRegister,\n          className: `toggle-btn ${isRegister ? 'active' : ''}`,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: `input-group ${isRegister ? 'register' : 'login'}`,\n        onSubmit: isRegister ? register : login,\n        children: [isRegister && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-field\",\n            placeholder: \"First Name\",\n            name: \"firstName\",\n            value: formData.firstName,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-field\",\n            placeholder: \"Last Name\",\n            name: \"lastName\",\n            value: formData.lastName,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"input-field\",\n            placeholder: \"Email Id\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"input-field\",\n            placeholder: \"Enter Password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"input-field\",\n            placeholder: \"Confirm Password\",\n            name: \"confirmPassword\",\n            value: formData.confirmPassword,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"check-box\",\n            name: \"agreeTerms\",\n            checked: formData.agreeTerms,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"I agree to the terms and conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-btn\",\n            children: \"Cadastro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), !isRegister && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-field\",\n            placeholder: \"Email Id\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"input-field\",\n            placeholder: \"Enter Password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"check-box\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Remember Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-btn\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), newUserData && /*#__PURE__*/_jsxDEV(Listagem, {\n      usersData: [newUserData]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginForm, \"c7IdLbEEyeg/kGI3QD9SWu/kEcc=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useEffect","Listagem","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginForm","onClose","_s","isRegister","setIsRegister","formPosition","setFormPosition","formData","setFormData","firstName","lastName","email","password","confirmPassword","agreeTerms","newUserData","setNewUserData","document","addEventListener","handleClickOutside","removeEventListener","event","formContainer","getElementById","contains","target","switchToRegister","login","preventDefault","register","users","JSON","parse","localStorage","getItem","newUser","push","setItem","stringify","alert","handleChange","name","value","type","checked","prevData","id","className","style","left","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","placeholder","onChange","required","usersData","_c","$RefreshReg$"],"sources":["C:/Users/flavi/Desktop/MangaKu/mangaku/src/components/LoginForm.jsx"],"sourcesContent":["// LoginForm.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport './LoginForm.css'; // Importando o arquivo de estilo\r\nimport Listagem from '../pages/Listagem';\r\n\r\nconst LoginForm = ({ onClose }) => {\r\n    const [isRegister, setIsRegister] = useState(false);\r\n    const [formPosition, setFormPosition] = useState(0);\r\n    const [formData, setFormData] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        agreeTerms: false,\r\n    });\r\n    const [newUserData, setNewUserData] = useState(null); // Adicionando estado para os novos dados do usuário\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []);\r\n\r\n    const handleClickOutside = (event) => {\r\n        const formContainer = document.getElementById('login-form');\r\n        if (formContainer && !formContainer.contains(event.target)) {\r\n            onClose();\r\n        }\r\n    };\r\n\r\n    const switchToRegister = () => {\r\n        setIsRegister(!isRegister);\r\n        setFormPosition(isRegister ? 0 : 100);\r\n    };\r\n\r\n    const login = (event) => {\r\n        event.preventDefault();\r\n        // Código da função login\r\n        // Aqui você pode adicionar a lógica de login se necessário\r\n        onClose(); // Fecha o formulário após o login\r\n    };\r\n\r\n    const register = (event) => {\r\n        event.preventDefault();\r\n        if (formData.password === formData.confirmPassword && formData.agreeTerms) {\r\n            const users = JSON.parse(localStorage.getItem('users')) || [];\r\n            const newUser = {\r\n                firstName: formData.firstName,\r\n                lastName: formData.lastName,\r\n                email: formData.email,\r\n                password: formData.password,\r\n            };\r\n            users.push(newUser);\r\n            localStorage.setItem('users', JSON.stringify(users));\r\n\r\n            // Atualizando o estado com os novos dados do usuário\r\n            setNewUserData(newUser);\r\n\r\n            onClose(); // Fecha o formulário após o registro\r\n        } else {\r\n            alert('Senhas não correspondem ou termos não aceitos.');\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value, type, checked } = event.target;\r\n        setFormData((prevData) => ({\r\n            ...prevData,\r\n            [name]: type === 'checkbox' ? checked : value,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div id=\"login-form\" className={`form-container ${isRegister ? 'visible' : ''}`} style={{ left: `${formPosition}%` }}>\r\n            <div className=\"form-box\">\r\n                <div className='button-box'>\r\n                    <div id='btn'></div>\r\n                    <button type='button' onClick={switchToRegister} className={`toggle-btn ${isRegister ? '' : 'active'}`}>\r\n                        Log In\r\n                    </button>\r\n                    <button type='button' onClick={switchToRegister} className={`toggle-btn ${isRegister ? 'active' : ''}`}>\r\n                        Register\r\n                    </button>\r\n                </div>\r\n\r\n                <form className={`input-group ${isRegister ? 'register' : 'login'}`} onSubmit={isRegister ? register : login}>\r\n                    {isRegister && (\r\n                        <>\r\n                            <input\r\n                                type='text'\r\n                                className='input-field'\r\n                                placeholder='First Name'\r\n                                name='firstName'\r\n                                value={formData.firstName}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            <input\r\n                                type='text'\r\n                                className='input-field'\r\n                                placeholder='Last Name'\r\n                                name='lastName'\r\n                                value={formData.lastName}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            <input\r\n                                type='email'\r\n                                className='input-field'\r\n                                placeholder='Email Id'\r\n                                name='email'\r\n                                value={formData.email}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            <input\r\n                                type='password'\r\n                                className='input-field'\r\n                                placeholder='Enter Password'\r\n                                name='password'\r\n                                value={formData.password}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            <input\r\n                                type='password'\r\n                                className='input-field'\r\n                                placeholder='Confirm Password'\r\n                                name='confirmPassword'\r\n                                value={formData.confirmPassword}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            <input\r\n                                type='checkbox'\r\n                                className='check-box'\r\n                                name='agreeTerms'\r\n                                checked={formData.agreeTerms}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <span>I agree to the terms and conditions</span>\r\n                            <button type='submit' className='submit-btn'>\r\n                                Cadastro\r\n                            </button>\r\n                        </>\r\n                    )}\r\n                    {!isRegister && (\r\n                        <>\r\n                            <input\r\n                                type='text'\r\n                                className='input-field'\r\n                                placeholder='Email Id'\r\n                                required\r\n                            />\r\n                            <input\r\n                                type='password'\r\n                                className='input-field'\r\n                                placeholder='Enter Password'\r\n                                required\r\n                            />\r\n                            <input\r\n                                type='checkbox'\r\n                                className='check-box'\r\n                            />\r\n                            <span>Remember Password</span>\r\n                            <button type='submit' className='submit-btn'>\r\n                                Login\r\n                            </button>\r\n                        </>\r\n                    )}\r\n                </form>\r\n            </div>\r\n            {newUserData && (\r\n                <Listagem usersData={[newUserData]} />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}